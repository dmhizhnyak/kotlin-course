package com.dm.kotlincourse.lesson3

    /*Погрузимся в атмосферу "Hackathon Survival": Марафон, где участники пытаются завершить реальный проект в условиях искусственно созданного хаоса (например, часто меняющиеся требования, неожиданные "сбои" в оборудовании)
Для каждого из полей подбери наилучший способ хранения из известных тебе. Учитывай такие факторы, как изменяемость, обязательность, возможность начальной установки, ресурсоёмкие вычисления значения, необходимость проверки устанавливаемого значения на валидность или запрет доступа на установку при возможности чтения, публичность и приватность данных.
Название мероприятия*/

//Дата проведения
val eventDate: String = "12.10.2024"
//Место проведения
var eventLocation: String = "Moskow"
//Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
var eventBudget: String = "50000"
//Количество участников
var participants: Int = 0
    get () = field
    private set(value) {field=value}
//Длительность хакатона
var eventDuration: Long = 8*60*60
//Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
private lateinit var contactInfo: String
//Текущее состояние хакатона (статус)
var status: String = "Не начат"
//Список спонсоров
val sponsorList: String = ""
//Бюджет мероприятия
val budget: Double = 2500.0
//Текущий уровень доступа к интернету
var internetStatus: Int = 5
//Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
private var equipmentTrasportationInf: String = ""
//Количество команд
var teamCount: Int = 0
//Перечень задач
val taskList: String = ""
//План эвакуации
val evacuationPlan: String = ""
//Список доступного оборудования
var equipmentList: String = "10"
//Список свободного оборудования
var equiomentFreeList: String = "10"
//График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
lateinit var mealPlan: String
//План мероприятий на случай сбоев
var planError: String = ""
//Список экспертов и жюри
var listExperts: String = ""
//Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.
private var methodsReport: String = ""
//Политика конфиденциальности
var politiceConfiditiation: String = ""
//Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
private val feedback: String by lazy {""}
//Текущая температура в помещении

//Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.
var monitorEthernet: String = ""
//Уровень освещения
var lightStatus: Int = 2
//Лог событий мероприятия
private var log: String = ""
//Доступность медицинской помощи
var emergency: Boolean = true
//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
var safety: String = ""
//Регистрационный номер мероприятия
val registrationNumber: Int = 2838623
//Максимально допустимый уровень шума в помещении хакатона.
var noiseLevel: Int = 100
//Индикатор превышения уровня шума в помещениях
var indicatorNoiseLevel: Boolean = false
//Формат мероприятия (зависит от геополитической обстановки)
var format: String = ""
//Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля.
var freeSeats: Int = 0
    get() = field
    set(value) {
        if (value>=0) field=value
    }
//План взаимодействия с прессой
//Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
//Статус получения всех необходимых разрешений
//Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)
//Список партнеров мероприятия
//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
lateinit var report: String
//План распределения призов
//Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.
const val emergencyContactInfo: Int = 911
//Особые условия для участников с ограниченными возможностями
//Общее настроение участников (определяется опросами)
val mood: String by lazy {""}
//Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия.
var planHackaton: String =""
lateinit var eventPlan: String
//Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.
lateinit var spesialGuestName: String
//Максимальное количество людей, которое может вместить место проведения.
const val maxCount: Int = 450
//Стандартное количество часов, отведенное каждой команде для работы над проектом.

//Текущая температура в помещении
