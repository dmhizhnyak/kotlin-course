package com.dm.kotlincourse.lesson3

    /*Погрузимся в атмосферу "Hackathon Survival": Марафон, где участники пытаются завершить реальный проект в условиях искусственно созданного хаоса (например, часто меняющиеся требования, неожиданные "сбои" в оборудовании)
Для каждого из полей подбери наилучший способ хранения из известных тебе. Учитывай такие факторы, как изменяемость, обязательность, возможность начальной установки, ресурсоёмкие вычисления значения, необходимость проверки устанавливаемого значения на валидность или запрет доступа на установку при возможности чтения, публичность и приватность данных.
Название мероприятия*/

//Дата проведения
var eventDate: String = "12.10.2024"
//Место проведения
var eventLocation: String = "Moskow"
//Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.

//Количество участников
var participants: Int = 214
//Длительность хакатона
var eventDuration: Int = 120
//Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
var contactInfo: String = ""
//Текущее состояние хакатона (статус)
var status: String = ""
//Список спонсоров
var sponsorList: String = ""
//Бюджет мероприятия
val budget: Double = 2500.0
//Текущий уровень доступа к интернету
var internetStatus: String = "Good"
//Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
var equipmentTrasportationInf: String = ""
//Количество команд
var teamCount: Int = 12
//Перечень задач
var taskList: String = ""
//План эвакуации
var evacuationPlan: String = ""
//Список доступного оборудования
var equipmentList: String = ""
//Список свободного оборудования
var equiomentFreeList: String = ""
//График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
var mealPlan: String = ""
//План мероприятий на случай сбоев
//Список экспертов и жюри
//Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.
//Политика конфиденциальности
//Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
//Текущая температура в помещении
//Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.
//Уровень освещения
//Лог событий мероприятия
//Доступность медицинской помощи
//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
//Регистрационный номер мероприятия
const val registrationNumber: Int = 2838623
//Максимально допустимый уровень шума в помещении хакатона.
var noiseLevel: Int = 100
//Индикатор превышения уровня шума в помещениях
var indicatorNoiseLevel: Int = 0
    get() = field
    set(value) {
        if (value>=100) field=value
    }
//Формат мероприятия (зависит от геополитической обстановки)
//Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля.
var freeSeats: Int = 0
    get() = field
    set(value) {
        if (value>=0) field=value
    }
//План взаимодействия с прессой
//Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
//Статус получения всех необходимых разрешений
//Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)
//Список партнеров мероприятия
//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
lateinit var report: String
//План распределения призов
//Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.
const val emergencyContactInfo: Int = 911
//Особые условия для участников с ограниченными возможностями
//Общее настроение участников (определяется опросами)
//Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия.
//Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.
lateinit var spesialGuestName: String
//Максимальное количество людей, которое может вместить место проведения.
const val maxCount: Int = 450
//Стандартное количество часов, отведенное каждой команде для работы над проектом.

//Текущая температура в помещении
